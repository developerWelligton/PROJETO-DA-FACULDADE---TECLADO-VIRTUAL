/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package treinoteclado;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.Arrays;
import java.util.List;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author WELLIGTON
 */

public class Teclado extends javax.swing.JFrame {

    /**
     * Creates new form Teclado
     */
    public Teclado() {
        initComponents();
    setLocationRelativeTo(null);
        t = new Timer(10, acoes);
    }
        private Timer t;
        private int m, s, cs;
        private ActionListener acoes = new ActionListener(){

        @Override
        public void actionPerformed(ActionEvent ae) {
            ++cs; 
            if(cs==100){
                cs = 0; // zera o milesegundo.
                ++s;    // incrementa o segundo.
            }
            if(s==60) 
            {
                s = 0; // zera o segundo.
                ++m;   // incrementa o minuto.
            }
            AtualizarCronometro(); //chama a função que atualiza o cronometro.
            VerificarCronometro(); //chama a função que verifica o cronometro.
            
        }
    };
        
    // função que atualiza o cronometro.
     private void AtualizarCronometro() {
        String tempo = (m<=9?"0":"")+m+":"+(s<=9?"0":"")+s+":"+(cs<=9?"0":"")+cs;
        Cronometro.setText(tempo); // coloca o valor do cronometro em uma jlabel chamada cronometro.
    }
       
    double letra_certa=0.0;
    double letra_errada=0.0;
    int letra_q = 0;
    int i = 0;
    int fase = 1;
    
    
  // devido ao meu teclado não conseguir ler acentos eu evitei o uso de pangramas que possuiam tais.  
  //pangramas nivel 1 - em Inglês.
List <String> frase1 = Arrays.asList("Jackdaws love my big sphinx of quartz. ", 
                                     "Pack my box with five dozen liquor jugs. ",
                                     "A quick brown fox jumps over the lazy dog. ",
                                    "Xylophone wizard begets quick jive form. ",
                                    "Lazy movers quit hard packing of jewelry boxes. ");
//pangramas nivel 2 - em portugues.
List <String> frase2 = Arrays.asList("Jane quer LP, fax, CD, giz, TV e bom whisky. ",
                                    "Blitz prende ex-vesgo com cheque fajuto. ",
                                    "Um pequeno jabuti xereta viu dez cegonhas felizes. ",
                                    "Gazeta publica hoje no jornal uma breve nota de faxina na quermesse. ",
                                    "Zebras caolhas de Java querem passar fax para moças gigantes de New York. ");
//pangramas nivel 3 - em Inglês.
List <String> frase3 = Arrays.asList("How razorback-jumping frogs can level six piqued gymnasts. ",
                                    "Freight to me sixty dozen quart jars and twelve black pans. ",
                                    "Crazy Fredericka bought many very exquisite opal jewels. ",
                                    "Sixty zippers were quickly picked from the woven jute bag. ",
                                    "Six plump boys guzzled cheap raw vodka quite joyfully. ");

//escolhe uma frase randomica na lista de frase de nivel 1.
char [] pan1 = (frase1.get(new Random().nextInt(frase1.size()))).toCharArray();



    //The quick brown fox jumps over a lazy dog
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        LetraW = new javax.swing.JButton();
        LetraE = new javax.swing.JButton();
        LetraR = new javax.swing.JButton();
        LetraT = new javax.swing.JButton();
        LetraY = new javax.swing.JButton();
        LetraU = new javax.swing.JButton();
        LetraI = new javax.swing.JButton();
        LetraO = new javax.swing.JButton();
        LetraP = new javax.swing.JButton();
        back = new javax.swing.JButton();
        LetraA = new javax.swing.JButton();
        LetraS = new javax.swing.JButton();
        LetraK = new javax.swing.JButton();
        LetraJ = new javax.swing.JButton();
        LetraH = new javax.swing.JButton();
        LetraD = new javax.swing.JButton();
        LetraF = new javax.swing.JButton();
        LetraG = new javax.swing.JButton();
        LetraL = new javax.swing.JButton();
        LetraÇ = new javax.swing.JButton();
        enter = new javax.swing.JButton();
        LetraZ = new javax.swing.JButton();
        LetraX = new javax.swing.JButton();
        LetraC = new javax.swing.JButton();
        LetraV = new javax.swing.JButton();
        LetraB = new javax.swing.JButton();
        LetraN = new javax.swing.JButton();
        LetraM = new javax.swing.JButton();
        Virgula = new javax.swing.JButton();
        Ponto = new javax.swing.JButton();
        spaco = new javax.swing.JButton();
        caps = new javax.swing.JButton();
        shift = new javax.swing.JButton();
        LetraQ = new javax.swing.JButton();
        ifen = new javax.swing.JButton();
        ctrl = new javax.swing.JButton();
        Alt = new javax.swing.JButton();
        Tab = new javax.swing.JButton();
        aspa = new javax.swing.JButton();
        Num1 = new javax.swing.JButton();
        Num2 = new javax.swing.JButton();
        Num3 = new javax.swing.JButton();
        Num4 = new javax.swing.JButton();
        Num5 = new javax.swing.JButton();
        Num6 = new javax.swing.JButton();
        Num7 = new javax.swing.JButton();
        Num8 = new javax.swing.JButton();
        Num9 = new javax.swing.JButton();
        igual = new javax.swing.JButton();
        Num0 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextArea = new javax.swing.JTextArea();
        Acerto = new javax.swing.JLabel();
        Titulo = new javax.swing.JLabel();
        Pangrama = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        erros = new javax.swing.JLabel();
        LetraPressionada = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ProxLetra = new javax.swing.JLabel();
        Jfase = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Cronometro = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("TREINO DE TECLADO");

        LetraW.setText("W");
        LetraW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LetraWActionPerformed(evt);
            }
        });

        LetraE.setText("E");
        LetraE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LetraEActionPerformed(evt);
            }
        });

        LetraR.setText("R");
        LetraR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LetraRActionPerformed(evt);
            }
        });

        LetraT.setText("T");
        LetraT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LetraTActionPerformed(evt);
            }
        });

        LetraY.setText("Y");
        LetraY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LetraYActionPerformed(evt);
            }
        });

        LetraU.setText("U");
        LetraU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LetraUActionPerformed(evt);
            }
        });

        LetraI.setText("I");
        LetraI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LetraIActionPerformed(evt);
            }
        });

        LetraO.setText("O");
        LetraO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LetraOActionPerformed(evt);
            }
        });

        LetraP.setText("P");
        LetraP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LetraPActionPerformed(evt);
            }
        });

        back.setText("BACKSPACE");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        LetraA.setText("A");
        LetraA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LetraAActionPerformed(evt);
            }
        });

        LetraS.setText("S");
        LetraS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LetraSActionPerformed(evt);
            }
        });

        LetraK.setText("K");
        LetraK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LetraKActionPerformed(evt);
            }
        });

        LetraJ.setText("J");
        LetraJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LetraJActionPerformed(evt);
            }
        });

        LetraH.setText("H");
        LetraH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LetraHActionPerformed(evt);
            }
        });

        LetraD.setText("D");
        LetraD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LetraDActionPerformed(evt);
            }
        });

        LetraF.setText("F");
        LetraF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LetraFActionPerformed(evt);
            }
        });

        LetraG.setText("G");
        LetraG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LetraGActionPerformed(evt);
            }
        });

        LetraL.setText("L");
        LetraL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LetraLActionPerformed(evt);
            }
        });

        LetraÇ.setText("Ç");
        LetraÇ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LetraÇActionPerformed(evt);
            }
        });

        enter.setText("ENTER");

        LetraZ.setText("Z");
        LetraZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LetraZActionPerformed(evt);
            }
        });

        LetraX.setText("X");
        LetraX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LetraXActionPerformed(evt);
            }
        });

        LetraC.setText("C");
        LetraC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LetraCActionPerformed(evt);
            }
        });

        LetraV.setText("V");
        LetraV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LetraVActionPerformed(evt);
            }
        });

        LetraB.setText("B");
        LetraB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LetraBActionPerformed(evt);
            }
        });

        LetraN.setText("N");
        LetraN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LetraNActionPerformed(evt);
            }
        });

        LetraM.setText("M");
        LetraM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LetraMActionPerformed(evt);
            }
        });

        Virgula.setText(",");
        Virgula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VirgulaActionPerformed(evt);
            }
        });

        Ponto.setText(".");
        Ponto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PontoActionPerformed(evt);
            }
        });

        spaco.setText("SPACE");

        caps.setText("CAPS");

        shift.setText("SHIFT");
        shift.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shiftActionPerformed(evt);
            }
        });

        LetraQ.setText("Q");
        LetraQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LetraQActionPerformed(evt);
            }
        });

        ifen.setText("-");

        ctrl.setText("Ctrl");
        ctrl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ctrlActionPerformed(evt);
            }
        });

        Alt.setText("Alt");

        Tab.setText("TAB");

        aspa.setText("'");
        aspa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aspaActionPerformed(evt);
            }
        });

        Num1.setText("1");
        Num1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Num1ActionPerformed(evt);
            }
        });

        Num2.setText("2");
        Num2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Num2ActionPerformed(evt);
            }
        });

        Num3.setText("3");
        Num3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Num3ActionPerformed(evt);
            }
        });

        Num4.setText("4");
        Num4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Num4ActionPerformed(evt);
            }
        });

        Num5.setText("5");
        Num5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Num5ActionPerformed(evt);
            }
        });

        Num6.setText("6");
        Num6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Num6ActionPerformed(evt);
            }
        });

        Num7.setText("7");
        Num7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Num7ActionPerformed(evt);
            }
        });

        Num8.setText("8");
        Num8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Num8ActionPerformed(evt);
            }
        });

        Num9.setText("9");
        Num9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Num9ActionPerformed(evt);
            }
        });

        igual.setText("=");
        igual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                igualActionPerformed(evt);
            }
        });

        Num0.setText("0");
        Num0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Num0ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(shift, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(LetraZ, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LetraX, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LetraC, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LetraV, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LetraB, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LetraN, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LetraM, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Virgula, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Ponto, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(aspa, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Num1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Num2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Num3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Num4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Num5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Num6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Num7, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Num8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Num9, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Num0, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ifen, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(igual, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(Tab, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(LetraQ, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(ctrl, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(Alt, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(spaco, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(LetraW, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(LetraE, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(LetraR, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(LetraT, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(LetraY, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(LetraU, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(LetraI, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(LetraO, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(LetraP, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(caps, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LetraA, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LetraS, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LetraD, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LetraF, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LetraG, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LetraH, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LetraJ, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LetraK, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LetraL, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LetraÇ, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(enter, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(igual, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ifen, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Num0, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Num9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Num8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Num7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Num6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Num5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Num4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Num3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Num2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Num1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aspa, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Tab, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LetraQ, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LetraW, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LetraE, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LetraR, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LetraT, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LetraY, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LetraU, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LetraI, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LetraO, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LetraP, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(caps, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LetraA, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LetraS, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LetraD, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LetraF, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LetraG, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LetraH, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LetraJ, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LetraK, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LetraL, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LetraÇ, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(enter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shift, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LetraZ, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LetraX, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LetraC, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LetraV, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LetraB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LetraN, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LetraM, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Virgula, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ponto, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spaco, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Alt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ctrl, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        TextArea.setColumns(20);
        TextArea.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        TextArea.setRows(5);
        TextArea.setMaximumSize(new java.awt.Dimension(100, 5000));
        TextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TextAreaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TextAreaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(TextArea);

        Acerto.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Acerto.setText("0");
        Acerto.setToolTipText("");

        Titulo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Titulo.setText("Letra certa:");

        Pangrama.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        Pangrama.setText(String.valueOf(pan1));
        Pangrama.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Letra errada:");

        erros.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        erros.setText("0");

        LetraPressionada.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        LetraPressionada.setText("letra press");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Proxima Letra:");

        ProxLetra.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        ProxLetra.setText(String.valueOf(pan1[0]));

        Jfase.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Jfase.setText("1");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Fase:");

        Cronometro.setText("00:00:00");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(ProxLetra)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(LetraPressionada)))
                        .addGap(37, 37, 37))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(324, 324, 324)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(9, 9, 9)
                                        .addComponent(Jfase, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(Cronometro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(Pangrama, javax.swing.GroupLayout.PREFERRED_SIZE, 854, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(80, 80, 80)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Titulo)
                                .addGap(11, 11, 11)
                                .addComponent(Acerto))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, 0)
                                .addComponent(erros)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(Titulo))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(Acerto)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(erros)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Jfase)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Cronometro, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Pangrama)))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ProxLetra)
                            .addComponent(LetraPressionada))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   
    private void LetraWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LetraWActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LetraWActionPerformed

    private void LetraEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LetraEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LetraEActionPerformed

    private void LetraRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LetraRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LetraRActionPerformed

    private void LetraTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LetraTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LetraTActionPerformed

    private void LetraYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LetraYActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LetraYActionPerformed

    private void LetraUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LetraUActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LetraUActionPerformed

    private void LetraPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LetraPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LetraPActionPerformed

    private void LetraIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LetraIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LetraIActionPerformed

    private void LetraOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LetraOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LetraOActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_backActionPerformed

    private void LetraAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LetraAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LetraAActionPerformed

    private void LetraSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LetraSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LetraSActionPerformed

    private void LetraKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LetraKActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LetraKActionPerformed

    private void LetraJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LetraJActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LetraJActionPerformed

    private void LetraHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LetraHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LetraHActionPerformed

    private void LetraDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LetraDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LetraDActionPerformed

    private void LetraFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LetraFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LetraFActionPerformed

    private void LetraGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LetraGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LetraGActionPerformed

    private void LetraLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LetraLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LetraLActionPerformed

    private void LetraÇActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LetraÇActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LetraÇActionPerformed

    private void LetraZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LetraZActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LetraZActionPerformed

    private void LetraXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LetraXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LetraXActionPerformed

    private void LetraCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LetraCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LetraCActionPerformed

    private void LetraVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LetraVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LetraVActionPerformed

    private void LetraBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LetraBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LetraBActionPerformed

    private void LetraNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LetraNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LetraNActionPerformed

    private void LetraMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LetraMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LetraMActionPerformed

    private void VirgulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VirgulaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_VirgulaActionPerformed

    private void PontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PontoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PontoActionPerformed
  
    private void TextAreaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextAreaKeyPressed
        
        //verifica se o usuario apertou o shift ou caps lock para nao computar o erro.
        if(evt.getKeyCode() != KeyEvent.VK_CAPS_LOCK && evt.getKeyCode() != KeyEvent.VK_SHIFT )
        {
            t.start();  //inicia o cronometro.
            char letra = evt.getKeyChar();  // armazena a tecla digitada pelo usuario.
            LetraPressionada.setText(String.valueOf(letra));    // mostra a letra que o usuario digitou.
 
       if(letra == pan1[i]){ //compara a letra com o pangrama.
                String letra1 = String.valueOf(letra); // armazena a letra em uma string.
                letra1 = letra1.toLowerCase();  //converte a letra1 para minusculo.
                MudarCorC(letra1);  //chama a função mudar cor certa.
                letra_certa++;  // incrementa a letra certa.
                i++;    //incrementa o i para ir para a proxima letra.
                Acerto.setText(Double.toString(letra_certa));   //coloca a variavel letra_certa na tela apos converter ela para string. 
                ProxLetra.setText(String.valueOf(pan1[i])); //coloca a proxima letra na tela.
                if(' '== pan1[i]){  //mudar os espaços para "SPACE" para guiar melhor o usuario.
                ProxLetra.setText(String.valueOf("SPACE"));
                }
        }else{ //executa esse codigo em caso da letra ser diferente do pangrama.
            // devido a nao conseguir ser armazenada na variavel letra, a mudança do backspace, tab, ctrl e alt são feita no else.
                if(evt.getKeyCode() == KeyEvent.VK_BACK_SPACE){
                back.setBackground(Color.RED);
                }
                if(evt.getKeyCode() == 9){
                Tab.setBackground(Color.RED);
                }
                if(evt.getKeyCode() == 17){
                ctrl.setBackground(Color.RED);
                }
                if(evt.getKeyCode() == 18){
                Alt.setBackground(Color.RED);
                }
                
                String letra1 = String.valueOf(letra);
                letra1 = letra1.toLowerCase();
                MudarCorE(letra1);
                if(letra_errada != pan1.length - 1){    // um limitador de erro que faz a limitação do numero de erros do usuario.
                    letra_errada++;
                } else if(letra_errada == pan1.length - 1){ // se ele passar do limite todo o pangrama e reiniciado.
                    
                    t.stop(); // para o cronometro. 
                    JOptionPane.showMessageDialog(null,"FAÇA DE NOVO!\nVocê errou mais que devia" );
                    ReiniciarCronometro();
                        TextAreaKeyReleased(evt); // essa funçao e chamada para retonar a ultima letra digitada pelo usuario para a cor padrão.
                    i = 0;
                    ProxLetra.setText(String.valueOf(pan1[0]));
                    letra_certa = 0;
                    Acerto.setText(Double.toString(letra_certa));
                    letra_errada = 0;
                    erros.setText(Double.toString(letra_errada));
                    TextArea.setText("");
                    
                }
                erros.setText(Double.toString(letra_errada));
        }
       int erro = (int) ((pan1.length - 1)-((pan1.length - 1) * 0.80)) ; // usado para fazer o calculo do erro.
       
        //fase 1 para a fase 2 se o usuario atender as exigencias.
        if(i >= pan1.length -1 && letra_errada <= erro && fase == 1) {
            
                t.stop();
                pan1 = (frase2.get(new Random().nextInt(frase2.size()))).toCharArray(); // adiciona uma frase de nivel 2 ao pan1.
                Pangrama.setText(String.valueOf (pan1));
                fase ++;
                Jfase.setText(String.valueOf (fase));
                TextAreaKeyReleased(evt);
                char nota = CalcularNota(letra_errada, letra_certa); //chama a funçao que calcula a nota e armazena na variavel nota.
                JOptionPane.showMessageDialog(null,"Concluido!\nVocê Passou de Fase\nErros: " + letra_errada +
                                                "\nPercentual de erro : " + String.format("%.2f",(letra_errada/letra_certa)*100)+"%"+
                                                "\nSUA NOTA FOI: "+ nota);
                ReiniciarCronometro(); //chama a função que reinicia o cronometro
                i = 0;
                ProxLetra.setText(String.valueOf(pan1[0]));
                letra_certa = 0;
                Acerto.setText(Double.toString(letra_certa));
                letra_errada = 0;
                erros.setText(Double.toString(letra_errada));
                TextArea.setText("");
                
            } else if (i >= pan1.length -1 && letra_errada >= erro && fase == 1){ // executado quando o erro passa de 80%
                t.stop();
                TextAreaKeyReleased(evt);
                char nota = CalcularNota(letra_errada, letra_certa);
                JOptionPane.showMessageDialog(null,"FAÇA DE NOVO!\nErros: " + letra_errada +
                                                "\nPercentual de erro : " + String.format("%.2f",(letra_errada/letra_certa)*100)+"%"+
                                                "\nSUA NOTA FOI: "+ nota);
                ReiniciarCronometro();
                i = 0;
                ProxLetra.setText(String.valueOf(pan1[0]));
                letra_certa = 0;
                Acerto.setText(Double.toString(letra_certa));
                letra_errada = 0;
                erros.setText(Double.toString(letra_errada));
                TextArea.setText("");
                }
                //fase 2 para a fase 3 se o usuario atender as exigencias. o codigo e igual o da fase 1 para a 2.
               if(i >= pan1.length -1 && letra_errada <= erro && fase == 2) {
                
                t.stop();
                pan1 = (frase3.get(new Random().nextInt(frase3.size()))).toCharArray();
                Pangrama.setText(String.valueOf (pan1));
                fase ++;
                Jfase.setText(String.valueOf (fase));
                TextAreaKeyReleased(evt);
                char nota = CalcularNota(letra_errada, letra_certa);
                JOptionPane.showMessageDialog(null,"Concluido!\nVocê Passou de Fase\nErros: " + letra_errada +
                                                "\nPercentual de erro : " + String.format("%.2f",(letra_errada/letra_certa)*100)+"%"+
                                                "\nSUA NOTA FOI: "+ nota);
                ReiniciarCronometro();
                i = 0;
                ProxLetra.setText(String.valueOf(pan1[0]));
                letra_certa = 0;
                Acerto.setText(Double.toString(letra_certa));
                letra_errada = 0;
                erros.setText(Double.toString(letra_errada));
                TextArea.setText("");
            } else if (i >= pan1.length -1 && letra_errada >= erro && fase == 2){
                t.stop();
                TextAreaKeyReleased(evt);
                char nota = CalcularNota(letra_errada, letra_certa);
                JOptionPane.showMessageDialog(null,"FAÇA DE NOVO!\nErros: " + letra_errada +
                                                "\nPercentual de erro : " + String.format("%.2f",(letra_errada/letra_certa)*100)+"%"+
                                                "\nSUA NOTA FOI: "+ nota);
                ReiniciarCronometro();
                i = 0;
                ProxLetra.setText(String.valueOf(pan1[0]));
                letra_certa = 0;
                Acerto.setText(Double.toString(letra_certa));
                letra_errada = 0;
                erros.setText(Double.toString(letra_errada));
                TextArea.setText("");
                }
               
               //fase 3 para a fase 1 se o usuario resolver reinicar ou terminar o progama se o mesmo quiser.
               if(i >= pan1.length -1 && letra_errada <= erro && fase == 3) {
                  t.stop();
                TextAreaKeyReleased(evt);
                char nota = CalcularNota(letra_errada, letra_certa);
                JOptionPane.showMessageDialog(null,"Concluido!\nErros: " + letra_errada +
                                                "\nPercentual de erro : " + String.format("%.2f",(letra_errada/letra_certa)*100)+"%"+
                                                "\nSUA NOTA FOI: "+ nota);
               JOptionPane.showMessageDialog(null,"PARABÉNS\nVocê concluiu o desafio");
               int continuar = JOptionPane.showConfirmDialog(null, "deseja reinicar? ");
        if (continuar == JOptionPane.YES_OPTION) {
        pan1 = (frase1.get(new Random().nextInt(frase1.size()))).toCharArray();
        Pangrama.setText(String.valueOf (pan1));
        ReiniciarCronometro();
                fase = 1;
                Jfase.setText(String.valueOf (fase));
                i = 0;
                ProxLetra.setText(String.valueOf(pan1[0]));
                letra_certa = 0;
                Acerto.setText(Double.toString(letra_certa));
                letra_errada = 0;
                erros.setText(Double.toString(letra_errada));
                TextArea.setText("");
        }else {
        JOptionPane.showMessageDialog(null, "Então até a proxima!");
        System.exit(0);
        }
                
            } else if (i >= pan1.length -1 && letra_errada >= erro && fase == 3){
                t.stop();
                TextAreaKeyReleased(evt);
                char nota = CalcularNota(letra_errada, letra_certa);
                JOptionPane.showMessageDialog(null,"FAÇA DE NOVO!\nErros: " + letra_errada +
                                                "\nPercentual de erro : " + String.format("%.2f",(letra_errada/letra_certa)*100)+"%"+
                                                "\nSUA NOTA FOI: "+ nota);
                ReiniciarCronometro();
                i = 0;
                ProxLetra.setText(String.valueOf(pan1[0]));
                letra_certa = 0;
                Acerto.setText(Double.toString(letra_certa));
                letra_errada = 0;
                erros.setText(Double.toString(letra_errada));
                TextArea.setText("");
                }
        
        }else {
        if(evt.getKeyCode() == KeyEvent.VK_CAPS_LOCK){
           caps.setBackground(Color.BLUE);
        }
        if(evt.getKeyCode() == KeyEvent.VK_SHIFT){
           shift.setBackground(Color.BLUE);
        }
        
        }
        

    }//GEN-LAST:event_TextAreaKeyPressed

    private void LetraQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LetraQActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LetraQActionPerformed

// Após a letra ser precionada e mudada a cor de acordo se esta certa ou errada, ao ser solta, 
// no keyReleased ela e comparada e volta para sua cor padrão. 
    private void TextAreaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextAreaKeyReleased
      if(evt.getKeyCode() == KeyEvent.VK_A){
           LetraA.setBackground(null);
    }
       if(evt.getKeyCode() == KeyEvent.VK_B){
           LetraB.setBackground(null);
    }
       if(evt.getKeyCode() == KeyEvent.VK_C){
           LetraC.setBackground(null);
    }
       if(evt.getKeyCode() == KeyEvent.VK_D){
           LetraD.setBackground(null);
    }
       if(evt.getKeyCode() == KeyEvent.VK_E){
           LetraE.setBackground(null);
    }
       if(evt.getKeyCode() == KeyEvent.VK_F){
           LetraF.setBackground(null);
    }
       if(evt.getKeyCode() == KeyEvent.VK_G){
           LetraG.setBackground(null);
    }
       if(evt.getKeyCode() == KeyEvent.VK_H){
           LetraH.setBackground(null);
    }
       if(evt.getKeyCode() == KeyEvent.VK_I){
           LetraI.setBackground(null);
    }
       if(evt.getKeyCode() == KeyEvent.VK_J){
           LetraJ.setBackground(null);
    }
       if(evt.getKeyCode() == KeyEvent.VK_K){
           LetraK.setBackground(null);
    }
       if(evt.getKeyCode() == KeyEvent.VK_L){
           LetraL.setBackground(null);
    }
       if(evt.getKeyCode() == KeyEvent.VK_M){
           LetraM.setBackground(null);
    }
       if(evt.getKeyCode() == KeyEvent.VK_N){
           LetraN.setBackground(null);
    }
       if(evt.getKeyCode() == KeyEvent.VK_O){
           LetraO.setBackground(null);
    }
       if(evt.getKeyCode() == KeyEvent.VK_P){
           LetraP.setBackground(null);
    }
       if(evt.getKeyCode() == KeyEvent.VK_Q){
           LetraQ.setBackground(null);
    }
       if(evt.getKeyCode() == KeyEvent.VK_R){
           LetraR.setBackground(null);
    }
       if(evt.getKeyCode() == KeyEvent.VK_S){
           LetraS.setBackground(null);
    }
       if(evt.getKeyCode() == KeyEvent.VK_T){
           LetraT.setBackground(null);
    }
       if(evt.getKeyCode() == KeyEvent.VK_U){
           LetraU.setBackground(null);
    }
       if(evt.getKeyCode() == KeyEvent.VK_V){
           LetraV.setBackground(null);
    }
       if(evt.getKeyCode() == KeyEvent.VK_W){
           LetraW.setBackground(null);
    }
       if(evt.getKeyCode() == KeyEvent.VK_X){
           LetraX.setBackground(null);
    }
       if(evt.getKeyCode() == KeyEvent.VK_Y){
           LetraY.setBackground(null);
    }
       if(evt.getKeyCode() == KeyEvent.VK_Z){
           LetraZ.setBackground(null);
    }
       if(evt.getKeyCode() == KeyEvent.VK_SPACE){
           spaco.setBackground(null);
    }
    if(evt.getKeyCode() == KeyEvent.VK_CAPS_LOCK){
        caps.setBackground(null);
    }
    if(evt.getKeyCode() == KeyEvent.VK_SHIFT){
        shift.setBackground(null);
    }
    if(evt.getKeyCode() == 0){
        LetraÇ.setBackground(null);
    }
    if(evt.getKeyCode() == KeyEvent.VK_COMMA){
        Virgula.setBackground(null);
    }
    if(evt.getKeyCode() == KeyEvent.VK_PERIOD){
        Ponto.setBackground(null);
    }
    if(evt.getKeyCode() == KeyEvent.VK_BACK_SPACE){
        back.setBackground(null);
    }
    if(evt.getKeyCode() == 61){
        igual.setBackground(null);
    }
    if(evt.getKeyCode() == 45){
        ifen.setBackground(null);
    }
    if(evt.getKeyCode() == 222){
        aspa.setBackground(null);
    }
    if(evt.getKeyCode() == KeyEvent.VK_0){
        Num0.setBackground(null);
    }
    if(evt.getKeyCode() == KeyEvent.VK_1){
        Num1.setBackground(null);
    }
    if(evt.getKeyCode() == KeyEvent.VK_2){
        Num2.setBackground(null);
    }
    if(evt.getKeyCode() == KeyEvent.VK_3){
        Num3.setBackground(null);
    }
    if(evt.getKeyCode() == KeyEvent.VK_4){
        Num4.setBackground(null);
    }
    if(evt.getKeyCode() == KeyEvent.VK_5){
        Num5.setBackground(null);
    }
    if(evt.getKeyCode() == KeyEvent.VK_6){
        Num6.setBackground(null);
    }
    if(evt.getKeyCode() == KeyEvent.VK_7){
        Num7.setBackground(null);
    }
    if(evt.getKeyCode() == KeyEvent.VK_8){
        Num8.setBackground(null);
    }
    if(evt.getKeyCode() == KeyEvent.VK_9){
        Num9.setBackground(null);
    }
    if(evt.getKeyCode() == 9){
        Tab.setBackground(null);
    }
    if(evt.getKeyCode() == 17){
        ctrl.setBackground(null);
    }
    if(evt.getKeyCode() == 18){
        Alt.setBackground(null);
    }
    
    }//GEN-LAST:event_TextAreaKeyReleased

    private void ctrlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ctrlActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ctrlActionPerformed

    private void aspaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aspaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aspaActionPerformed

    private void Num1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Num1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Num1ActionPerformed

    private void Num2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Num2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Num2ActionPerformed

    private void Num3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Num3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Num3ActionPerformed

    private void Num4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Num4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Num4ActionPerformed

    private void Num5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Num5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Num5ActionPerformed

    private void Num6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Num6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Num6ActionPerformed

    private void Num7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Num7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Num7ActionPerformed

    private void Num8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Num8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Num8ActionPerformed

    private void Num9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Num9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Num9ActionPerformed

    private void igualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_igualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_igualActionPerformed

    private void Num0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Num0ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Num0ActionPerformed

    private void shiftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shiftActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_shiftActionPerformed

// função que reinicia o cronometro.     
    private void ReiniciarCronometro(){
      if(t.isRunning()) 
                {
                t.stop();
                TextArea.setEnabled(false); // função que desativa a area de texto.
                }
        m=0; s=0; cs=0;
        AtualizarCronometro();

     }
    
// função que faz a verificação do cronometro.    
    private void VerificarCronometro(){
      if(t.isRunning()) 
        {
            if(s == 30){ // se o tempo do cronometro for atingindo ele reinicia todo o pangrama e demais variaveis.
                t.stop();
                JOptionPane.showMessageDialog(null,"FAÇA DE NOVO!\nVocê passou do tempo" );
                ReiniciarCronometro();
                i = 0;
                ProxLetra.setText(String.valueOf(pan1[0]));
                letra_certa = 0;
                Acerto.setText(Double.toString(letra_certa));
                letra_errada = 0;
                erros.setText(Double.toString(letra_errada));
                TextArea.setText("");
            }
        }
               
     }

// função que calcula a nota do usuario e retorna uma métrica de avaliação.
    private static char CalcularNota(double erro, double acerto) {
        char nota = ' ';
        double por= 100 - ((erro/acerto)*100);
       if (por >= 90 ){
           nota = 'A';
       } else if (por >= 80 ){
           nota = 'B';
       } else if (por >= 60 ){
           nota = 'C';
       } else if (por >= 40 ){
           nota = 'D';
       } else if (por >= 20 ){
           nota = 'E';
       } else if (por <= 20 ){
           nota = 'F';
       }
    return nota;
}
 
// função que mudar a cor da letra digitada pelo usuario para verde se ele acertou.    
    public void MudarCorC(String letra){
    switch(letra){
    case "a" :{
        LetraA.setBackground(Color.GREEN);
        break;}
    case "b" :{
        LetraB.setBackground(Color.GREEN);
        break;}
    case "c" :{
        LetraC.setBackground(Color.GREEN);
        break;}
      case "d" :{
        LetraD.setBackground(Color.GREEN);
        break;}
      case "e" :{
        LetraE.setBackground(Color.GREEN);
        break;}
      case "f" :{
        LetraF.setBackground(Color.GREEN);
        break;}
      case "g" :{
        LetraG.setBackground(Color.GREEN);
        break;}
      case "h" :{
        LetraH.setBackground(Color.GREEN);
        break;}
      case "i" :{
        LetraI.setBackground(Color.GREEN);
        break;}
      case "j" :{
        LetraJ.setBackground(Color.GREEN);
        break;}
      case "k" :{
        LetraK.setBackground(Color.GREEN);
        break;}
      case "l" :{
        LetraL.setBackground(Color.GREEN);
        break;}
      case "m" :{
        LetraM.setBackground(Color.GREEN);
        break;}
      case "n" :{
        LetraN.setBackground(Color.GREEN);
        break;}
      case "o" :{
        LetraO.setBackground(Color.GREEN);
        break;}
      case "p" :{
        LetraP.setBackground(Color.GREEN);
        break;}
      case "q" :{
        LetraQ.setBackground(Color.GREEN);
        break;}
      case "r" :{
        LetraR.setBackground(Color.GREEN);
        break;}
      case "s" :{
        LetraS.setBackground(Color.GREEN);
        break;}
      case "t" :{
        LetraT.setBackground(Color.GREEN);
        break;}
      case "u" :{
        LetraU.setBackground(Color.GREEN);
        break;}
      case "v" :{
        LetraV.setBackground(Color.GREEN);
        break;}
      case "w" :{
        LetraW.setBackground(Color.GREEN);
        break;}
      case "x" :{
        LetraX.setBackground(Color.GREEN);
        break;}
      case "y" :{
        LetraY.setBackground(Color.GREEN);
        break;}
      case "z" :{
        LetraZ.setBackground(Color.GREEN);
        break;}
      case " " :{
        spaco.setBackground(Color.GREEN);
        break;}
       case "," :{
        Virgula.setBackground(Color.GREEN);
        break;}
       case "." :{
        Ponto.setBackground(Color.GREEN);
        break;}
       case "ç" :{
        LetraÇ.setBackground(Color.GREEN);
        break;}
    }
    
    }
    
// função que mudar a cor da letra digitada pelo usuario para vermelho se ele errou 
    public void MudarCorE(String letra){
    switch(letra){
    case "a" :{
        LetraA.setBackground(Color.RED);
        break;}
    case "b" :{
        LetraB.setBackground(Color.RED);
        break;}
    case "c" :{
        LetraC.setBackground(Color.RED);
        break;}
      case "d" :{
        LetraD.setBackground(Color.RED);
        break;}
      case "e" :{
        LetraE.setBackground(Color.RED);
        break;}
      case "f" :{
        LetraF.setBackground(Color.RED);
        break;}
      case "g" :{
        LetraG.setBackground(Color.RED);
        break;}
      case "h" :{
        LetraH.setBackground(Color.RED);
        break;}
      case "i" :{
        LetraI.setBackground(Color.RED);
        break;}
      case "j" :{
        LetraJ.setBackground(Color.RED);
        break;}
      case "k" :{
        LetraK.setBackground(Color.RED);
        break;}
      case "l" :{
        LetraL.setBackground(Color.RED);
        break;}
      case "m" :{
        LetraM.setBackground(Color.RED);
        break;}
      case "n" :{
        LetraN.setBackground(Color.RED);
        break;}
      case "o" :{
        LetraO.setBackground(Color.RED);
        break;}
      case "p" :{
        LetraP.setBackground(Color.RED);
        break;}
      case "q" :{
        LetraQ.setBackground(Color.RED);
        break;}
      case "r" :{
        LetraR.setBackground(Color.RED);
        break;}
      case "s" :{
        LetraS.setBackground(Color.RED);
        break;}
      case "t" :{
        LetraT.setBackground(Color.RED);
        break;}
      case "u" :{
        LetraU.setBackground(Color.RED);
        break;}
      case "v" :{
        LetraV.setBackground(Color.RED);
        break;}
      case "w" :{
        LetraW.setBackground(Color.RED);
        break;}
      case "x" :{
        LetraX.setBackground(Color.RED);
        break;}
      case "y" :{
        LetraY.setBackground(Color.RED);
        break;}
      case "z" :{
        LetraZ.setBackground(Color.RED);
        break;}
      case " " :{
        spaco.setBackground(Color.RED);
        break;}
       case "," :{
        Virgula.setBackground(Color.RED);
        break;}
       case "." :{
        Ponto.setBackground(Color.RED);
        break;}
        case "ç" :{
        LetraÇ.setBackground(Color.RED);
        break;}
        case "-" :{
        ifen.setBackground(Color.RED);
        break;}
        case "_" :{
        ifen.setBackground(Color.RED);
        break;}
        case "=" :{
        igual.setBackground(Color.RED);
        break;}
        case "+" :{
        igual.setBackground(Color.RED);
        break;}
        case "'" :{
        aspa.setBackground(Color.RED);
        break;}
        case "1" :{
        Num1.setBackground(Color.RED);
        break;}
        case "2" :{
        Num2.setBackground(Color.RED);
        break;}
        case "3" :{
        Num3.setBackground(Color.RED);
        break;}
        case "4" :{
        Num4.setBackground(Color.RED);
        break;}
        case "5" :{
        Num5.setBackground(Color.RED);
        break;}
        case "6" :{
        Num6.setBackground(Color.RED);
        break;}
        case "7" :{
        Num7.setBackground(Color.RED);
        break;}
        case "8" :{
        Num8.setBackground(Color.RED);
        break;}
        case "9" :{
        Num9.setBackground(Color.RED);
        break;}
        case "0" :{
        Num0.setBackground(Color.RED);
        break;}
    }
    
    }
    
    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        String nome;
        int resposta;
        nome = JOptionPane.showInputDialog("Qual é o seu nome?");
        resposta = JOptionPane.showConfirmDialog(null, "Olá " + nome + " vamos começar? ");
        if (resposta == JOptionPane.YES_OPTION) {
        // verifica se o usuário clicou no botão YES
        JOptionPane.showMessageDialog(null, "As regras são as seguintes:"
                                    + "\n1: Transcreva o pangrama corretamente para avançar para o proximo pangrama. "
                                    + "\n2: São 3 fase e será permitido Apenas 80% de erro. "
                                    + "\n3: Você terá 30 Segundos para transcrever, assim que digitar a primeira letra"
                                    + "\n4: Ao deletar um digitação incorreta o erro tambem sera contado. "
                                    + "\n5: Use a 'PROXIMA LETRA' para se guiar e evitar o erro."
                                    + "\nBoa sorte!!!\nPara inicar, aperte no OK");
                                    
        } else {
        JOptionPane.showMessageDialog(null, "Então volte quando quiser inicar");
        System.exit(0);
        }
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Teclado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Teclado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Teclado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Teclado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Teclado().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Acerto;
    private javax.swing.JButton Alt;
    private javax.swing.JLabel Cronometro;
    private javax.swing.JLabel Jfase;
    private javax.swing.JButton LetraA;
    private javax.swing.JButton LetraB;
    private javax.swing.JButton LetraC;
    private javax.swing.JButton LetraD;
    private javax.swing.JButton LetraE;
    private javax.swing.JButton LetraF;
    private javax.swing.JButton LetraG;
    private javax.swing.JButton LetraH;
    private javax.swing.JButton LetraI;
    private javax.swing.JButton LetraJ;
    private javax.swing.JButton LetraK;
    private javax.swing.JButton LetraL;
    private javax.swing.JButton LetraM;
    private javax.swing.JButton LetraN;
    private javax.swing.JButton LetraO;
    private javax.swing.JButton LetraP;
    private javax.swing.JLabel LetraPressionada;
    private javax.swing.JButton LetraQ;
    private javax.swing.JButton LetraR;
    private javax.swing.JButton LetraS;
    private javax.swing.JButton LetraT;
    private javax.swing.JButton LetraU;
    private javax.swing.JButton LetraV;
    private javax.swing.JButton LetraW;
    private javax.swing.JButton LetraX;
    private javax.swing.JButton LetraY;
    private javax.swing.JButton LetraZ;
    private javax.swing.JButton LetraÇ;
    private javax.swing.JButton Num0;
    private javax.swing.JButton Num1;
    private javax.swing.JButton Num2;
    private javax.swing.JButton Num3;
    private javax.swing.JButton Num4;
    private javax.swing.JButton Num5;
    private javax.swing.JButton Num6;
    private javax.swing.JButton Num7;
    private javax.swing.JButton Num8;
    private javax.swing.JButton Num9;
    private javax.swing.JLabel Pangrama;
    private javax.swing.JButton Ponto;
    private javax.swing.JLabel ProxLetra;
    private javax.swing.JButton Tab;
    private javax.swing.JTextArea TextArea;
    private javax.swing.JLabel Titulo;
    private javax.swing.JButton Virgula;
    private javax.swing.JButton aspa;
    private javax.swing.JButton back;
    private javax.swing.JButton caps;
    private javax.swing.JButton ctrl;
    private javax.swing.JButton enter;
    private javax.swing.JLabel erros;
    private javax.swing.JButton ifen;
    private javax.swing.JButton igual;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton shift;
    private javax.swing.JButton spaco;
    // End of variables declaration//GEN-END:variables
}
